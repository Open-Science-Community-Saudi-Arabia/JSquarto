--- 
title: Adding tutorials 
---
الدروس هي طريقة رائعة لتعليم الناس كيفية استخدام مشروعك. وهي دليل تدريجي يمشي المستخدم من خلال مهمة أو مفهوم محدد. الدروس هي طريقة رائعة لجعل الناس يستكملون مشروعك، ولمساعدتهم على فهم كيفية استخدامه.

### كيفية كتابة الدروس
يتم كتابة الدروس في علامة كوارتو. كوارتو هي لغة الدرج المصممة لتكون سهلة الكتابة والقراءة، وسهلة التحويل إلى صيغ أخرى. كوارتو عبارة عن مجموعة متميزة من الـ markdown، لذا فإن أي ملف markdown هو ملف ربع ساري المفعول. يضيف كونارتو بعض الميزات إلى المميزات لأسفل لجعلها أسهل لكتابة الدروس. وتشمل بعض المعالم ما يلي:

- القدرة على تضمين الكود و الإخراج في نفس الملف
- القدرة على تضمين التعليمات البرمجية من الملفات الأخرى
- إضافة بيانات التعريف / الصور وغيرها من المحتوى إلى الملف


### مجلد لكتابة البرنامج التعليمي 
By default, tutorials are written in the `docs/tutorials` folder. هذا هو المجلد حيث يتم تخزين جميع الدروس. يتم تخزين كل برنامج تعليمي في مجلد منفصل، واسم المجلد هو اسم البرنامج التعليمي. داخل المجلد، هناك ملفات ser<unk> `.qmd` التي تحتوي على محتويات البرنامج التعليمي. 


### تكوين البرنامج التعليمي
هناك أيضا ملف 'config.json' الذي يحتوي على تكوين البرنامج التعليمي. ملف son` يستخدم لهيكلة كيفية عرض البرنامج التعليمي من حيث ترتيب البرنامج التعليمي، العنوان والوصف وتجميع البرنامج التعليمي.

فيما يلي مثال لملف `config.json':

```json
{
    "المساهمة": {
        "title": "المساهمة في المشروع"،
        "الأطفال": {
            "Improving_documentation": {
                العنوان : "تحسين التوثيق"
            },
            "raising_issues": {
                العنوان: "إثارة المشاكل"
            },
            "raising_pr": {
                "عنوان": "رفع طلبات الجذب"
            }
        }
    },
    "project_structure": {
        "عنوان": "بنية المشروع"
    },
    "environment_setup": {
        "العنوان": "إعداد البيئة"
    },
    "سجل التغييرات": {
        "title": "سجل التغيير"
    },
    "التوطين": {
        "عنوان": "التعريب "
    },
    "How_to ": {
        "title": "كيف يمكن"،
        "الأطفال": {
            "setting_default_readme": {
                العنوان "title": "ضبط الرحلة الافتراضية"
            },
            "adding_tutorials": {
                "title": "إضافة دروس"
            },
            "specifying_source_files": {
                "title": "تحديد الملفات المصدرة"
            },
            "starting_a_new_build": {
                "title": "بدء بناء جديد"
            }
        }
    }
}

```

في المثال الوارد أعلاه، يحتوي ملف `config.json` على قائمة من الدروس التعليمية والترتيب الذي ينبغي عرضها فيه. يحتوي ملف `config.json` أيضًا على عنوان البرنامج التعليمي ووصف البرنامج التعليمي.

يحتوي ملف `config.json` أيضًا على قائمة للأطفال لكل برنامج تعليمي. يستخدم هذا لتجميع الدروس معا. فعلى سبيل المثال، في المثال الوارد أعلاه، فإن البرنامج التعليمي ”المساهم“ له ثلاثة أطفال: 'تحسين الوثائق`، و 'raising_issues`، و 'raising_pr`. هذا يجمع الدروس الثلاثة معاً تحت دروس "المساهمة".

### دروس التجميع
يمكن تجميع الدروس معا باستخدام ملف `config.json'. هذا مفيد لتنظيم الدروس في فئات. على سبيل المثال، قد ترغب في تجميع جميع الدروس المتعلقة بالمساهمة في المشروع معا، أو جميع الدروس المتعلقة بتهيئة البيئة معاً. هذا يجعل من الأسهل للمستخدمين العثور على الدروس التي يهتمون بها.

في المثال الوارد أعلاه، الملف `config.json` يجمع الدروس في فئات مثل `contributing` و`project_structure` و`environment_setup` و`changelog` و`localization` و`how_to`. ويحتوي كل من هذه الفئات على قائمة بالدروس، ويحتوي كل درس على قائمة بالأطفال. هذا يسمح لك بتنظيم الدروس بطريقة منطقية لمشروعك.

في هذا البرنامج التعليمي، تعلمنا كيفية كتابة الدروس في Quarto markdown، وكيفية تكوين `config. تعلمنا أيضا كيفية تجميع الدروس معا باستخدام ملف `config.json'. هذا يسمح لك بتنظيم الدروس بطريقة منطقية لمشروعك، ويجعل من الأسهل للمستخدمين العثور على الدروس التي يهتمون بها.

Summary
    - كيفية كتابة الدروس
    - تنسيق لكتابة الدروس
    - كيفية كتابة برنامج تعليمي
    - مجلد لكتابة البرنامج التعليمي


