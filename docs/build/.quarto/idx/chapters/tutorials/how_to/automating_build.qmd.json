{"title":"Automating build","markdown":{"yaml":{"title":"Automating build"},"headingText":"Prerequisites","containsRefs":false,"markdown":"\n\n\nThis section will go over the steps necessary to automate the process of building the book, integrating crowdin translations, and deploying the book to the web. This process is automated using GitHub Actions, which is a CI/CD tool that is integrated with GitHub. \n\n1. You need to review the crowdin integration guide here @crowdin-integration-guide to setup your crowdin project. \n2. You need to have a GitHub account.\n\n\n### Steps\n1. Navigate to `/.github/workflows/` folder in your github repository (you can create the folder if it doesn't exist).\n\n2. Create a new file called `build-book.yml` and paste the following code into the file:\n\n   ```yaml\n        name: Build Book with Babel Quarto\n\n        on:\n          pull_request:\n            branches:\n              - crowdin_integration\n         \n          workflow_dispatch:\n\n        env:\n          PR_AUTHOR_EMAIL: molunorichie@gmail.com\n          PR_AUTHOR_NAME: Richie\n          NEW_BRANCH: build_book-\n          DESTINATION_BRANCH: book\n          CONFIG_FILE: ./.jsquarto/config.json\n\n        jobs:\n          build_book:\n            runs-on: ubuntu-latest\n\n            strategy:\n              matrix:\n                node-version: [16.x]\n           \n            steps:\n              - name: Checkout\n                uses: actions/checkout@v3\n                with:\n                  persist-credentials: true\n\n              - name: Set New Branch Name\n                id: set_branch\n                run: echo \"NEW_BRANCH=${NEW_BRANCH}$(date +'%Y-%m-%d-%H-%M-%S')\" >> $GITHUB_ENV\n\n              - name: Setup R\n                run: |\n                  sudo apt-get update\n                  sudo apt-get install r-base\n                  sudo apt-get install r-base-core\n                  sudo apt-get install libssl-dev libcurl4-openssl-dev libxml2-dev\n\n              # Writeable directory is needed for R packages installation, installing to the default library path is not allowed\n              - name: Create writable directory for R packages\n                run: |\n                  mkdir ./my_R_library\n                  chmod u+w ./my_R_library\n\n              - name: Setup quarto\n                uses: quarto-dev/quarto-actions/setup@v2\n\n              - name: Setup Node.js\n                uses: actions/setup-node@v2\n                with:\n                  node-version: 16.x\n\n              - name: Install dependencies\n                run: npm i --save &&  npm install @oscsa/jsquarto -g\n\n              - name: Set jsquarto config\n                run: jsq config:set config=$CONFIG_FILE --force\n\n                ## Optional\n              - name: Remove content of the _book\n                run: jsq doc:clean\n\n              - name: Build book (jsquarto) \n                run:  tsc -b && jsq doc:generate\n\n              - name: Prepare crowdin translations\n                run: jsq fix:crowdin_files \n\n              - name: Install PAK\n                run: Rscript -e \"install.packages('pak', lib='./my_R_library')\"\n                  \n              - name: Install Babel quarto\n                run: Rscript -e \".libPaths(c('./my_R_library', .libPaths())); library(pak); pak::pak('ropensci-review-tools/babelquarto', lib='./my_R_library')\"\n\n              - name: Build book (babelquarto) \n                run: |\n                  config_output=$(jsq config:get | tail -n 10)\n                  echo \"$config_output\"\n                  OUTPUT_DIRECTORY=$(echo \"$config_output\" | grep -oP '(?<=outputDirectory: ).*' | tr -d \"',\")\n                  echo \"outputDirectory: $OUTPUT_DIRECTORY\"\n\n                  OUTPUT_DIRECTORY=$OUTPUT_DIRECTORY\n\n                  Rscript -e \".libPaths(c('./my_R_library', .libPaths())); library(babelquarto); project_dir <- '$OUTPUT_DIRECTORY'; babelquarto::render_book(project_path = project_dir)\"\n\n              - name: Fix built book\n                run: |\n                  jsq fix:all\n\n              - name: Commit changes\n                run: |\n                  git config --global user.email $PR_AUTHOR_EMAIL\n                  git config --global user.name $PR_AUTHOR_NAME\n                  git checkout -b $NEW_BRANCH\n                  git status\n                  git add .\n                  git commit -m \"Build book with babelquarto\"\n                  git push origin $NEW_BRANCH\n\n              - name: Create Pull Request\n                id: create_pr\n                uses: repo-sync/pull-request@v2\n                with:\n                  source_branch: ${{ env.NEW_BRANCH }}\n                  destination_branch: ${{ env.DESTINATION_BRANCH }} \n                  pr_title: New book build with babelquarto\n                  pr_body: |\n                    :crown: *An automated PR*\n\n                    Automated PR build book with babel-quarto\n\n                    _Created by [repo-sync/pull-request](https://github.com/repo-sync/pull-request)_\n                  pr_label: \"auto-pr\"\n                  pr_draft: false\n                  pr_allow_empty: true\n                  token: ${{ secrets.PAT_TOKEN }}\n\n              - name: Approve pull Request\n                if: steps.create_pr.outputs.pull_request_number\n                uses: hmarr/auto-approve-action@v2\n                with:\n                  github-token: ${{ secrets.GITHUB_TOKEN }}\n                  pull-request-number: ${{ steps.create_pr.outputs.pull_request_number }}\n    ```\n\n3. Now you only need to modify a few lines in the above code to suit your project. \n\n    - Change the `PR_AUTHOR_EMAIL` and `PR_AUTHOR_NAME` to your email and name respectively.\n    - Change the `DESTINATION_BRANCH` to the branch you want to deploy the book to.\n    - Change the `CONFIG_FILE` to the path of your jsquarto config file.\n    - Change the `pr_title` and `pr_body` to suit your project.\n    - Change the `pr_label` to the label you want to add to the PR.\n    - Change the `token` to your personal access token. You can create a personal access token by following the steps [here](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token).\n\n3.  The branch specified in the dispacth block should match the value used in your crowdin project setup\n\n    ```yaml\n       on:\n          pull_request:\n            branches:\n              - crowdin_integration\n    ```\n","srcMarkdownNoYaml":"\n\n##  {#automating_build}\n\nThis section will go over the steps necessary to automate the process of building the book, integrating crowdin translations, and deploying the book to the web. This process is automated using GitHub Actions, which is a CI/CD tool that is integrated with GitHub. \n\n### Prerequisites\n1. You need to review the crowdin integration guide here @crowdin-integration-guide to setup your crowdin project. \n2. You need to have a GitHub account.\n\n\n### Steps\n1. Navigate to `/.github/workflows/` folder in your github repository (you can create the folder if it doesn't exist).\n\n2. Create a new file called `build-book.yml` and paste the following code into the file:\n\n   ```yaml\n        name: Build Book with Babel Quarto\n\n        on:\n          pull_request:\n            branches:\n              - crowdin_integration\n         \n          workflow_dispatch:\n\n        env:\n          PR_AUTHOR_EMAIL: molunorichie@gmail.com\n          PR_AUTHOR_NAME: Richie\n          NEW_BRANCH: build_book-\n          DESTINATION_BRANCH: book\n          CONFIG_FILE: ./.jsquarto/config.json\n\n        jobs:\n          build_book:\n            runs-on: ubuntu-latest\n\n            strategy:\n              matrix:\n                node-version: [16.x]\n           \n            steps:\n              - name: Checkout\n                uses: actions/checkout@v3\n                with:\n                  persist-credentials: true\n\n              - name: Set New Branch Name\n                id: set_branch\n                run: echo \"NEW_BRANCH=${NEW_BRANCH}$(date +'%Y-%m-%d-%H-%M-%S')\" >> $GITHUB_ENV\n\n              - name: Setup R\n                run: |\n                  sudo apt-get update\n                  sudo apt-get install r-base\n                  sudo apt-get install r-base-core\n                  sudo apt-get install libssl-dev libcurl4-openssl-dev libxml2-dev\n\n              # Writeable directory is needed for R packages installation, installing to the default library path is not allowed\n              - name: Create writable directory for R packages\n                run: |\n                  mkdir ./my_R_library\n                  chmod u+w ./my_R_library\n\n              - name: Setup quarto\n                uses: quarto-dev/quarto-actions/setup@v2\n\n              - name: Setup Node.js\n                uses: actions/setup-node@v2\n                with:\n                  node-version: 16.x\n\n              - name: Install dependencies\n                run: npm i --save &&  npm install @oscsa/jsquarto -g\n\n              - name: Set jsquarto config\n                run: jsq config:set config=$CONFIG_FILE --force\n\n                ## Optional\n              - name: Remove content of the _book\n                run: jsq doc:clean\n\n              - name: Build book (jsquarto) \n                run:  tsc -b && jsq doc:generate\n\n              - name: Prepare crowdin translations\n                run: jsq fix:crowdin_files \n\n              - name: Install PAK\n                run: Rscript -e \"install.packages('pak', lib='./my_R_library')\"\n                  \n              - name: Install Babel quarto\n                run: Rscript -e \".libPaths(c('./my_R_library', .libPaths())); library(pak); pak::pak('ropensci-review-tools/babelquarto', lib='./my_R_library')\"\n\n              - name: Build book (babelquarto) \n                run: |\n                  config_output=$(jsq config:get | tail -n 10)\n                  echo \"$config_output\"\n                  OUTPUT_DIRECTORY=$(echo \"$config_output\" | grep -oP '(?<=outputDirectory: ).*' | tr -d \"',\")\n                  echo \"outputDirectory: $OUTPUT_DIRECTORY\"\n\n                  OUTPUT_DIRECTORY=$OUTPUT_DIRECTORY\n\n                  Rscript -e \".libPaths(c('./my_R_library', .libPaths())); library(babelquarto); project_dir <- '$OUTPUT_DIRECTORY'; babelquarto::render_book(project_path = project_dir)\"\n\n              - name: Fix built book\n                run: |\n                  jsq fix:all\n\n              - name: Commit changes\n                run: |\n                  git config --global user.email $PR_AUTHOR_EMAIL\n                  git config --global user.name $PR_AUTHOR_NAME\n                  git checkout -b $NEW_BRANCH\n                  git status\n                  git add .\n                  git commit -m \"Build book with babelquarto\"\n                  git push origin $NEW_BRANCH\n\n              - name: Create Pull Request\n                id: create_pr\n                uses: repo-sync/pull-request@v2\n                with:\n                  source_branch: ${{ env.NEW_BRANCH }}\n                  destination_branch: ${{ env.DESTINATION_BRANCH }} \n                  pr_title: New book build with babelquarto\n                  pr_body: |\n                    :crown: *An automated PR*\n\n                    Automated PR build book with babel-quarto\n\n                    _Created by [repo-sync/pull-request](https://github.com/repo-sync/pull-request)_\n                  pr_label: \"auto-pr\"\n                  pr_draft: false\n                  pr_allow_empty: true\n                  token: ${{ secrets.PAT_TOKEN }}\n\n              - name: Approve pull Request\n                if: steps.create_pr.outputs.pull_request_number\n                uses: hmarr/auto-approve-action@v2\n                with:\n                  github-token: ${{ secrets.GITHUB_TOKEN }}\n                  pull-request-number: ${{ steps.create_pr.outputs.pull_request_number }}\n    ```\n\n3. Now you only need to modify a few lines in the above code to suit your project. \n\n    - Change the `PR_AUTHOR_EMAIL` and `PR_AUTHOR_NAME` to your email and name respectively.\n    - Change the `DESTINATION_BRANCH` to the branch you want to deploy the book to.\n    - Change the `CONFIG_FILE` to the path of your jsquarto config file.\n    - Change the `pr_title` and `pr_body` to suit your project.\n    - Change the `pr_label` to the label you want to add to the PR.\n    - Change the `token` to your personal access token. You can create a personal access token by following the steps [here](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token).\n\n3.  The branch specified in the dispacth block should match the value used in your crowdin project setup\n\n    ```yaml\n       on:\n          pull_request:\n            branches:\n              - crowdin_integration\n    ```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"number-sections":false,"output-file":"automating_build.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.52","babelquarto":{"languagecodes":[{"name":"en","text":"Version in en"},{"name":"ar","text":"Version in ar"}],"mainlanguage":"en","languages":["ar"]},"title-en":"Title in en","description-en":"Description in en","author-en":"Author in en","title-ar":"Title in ar","description-ar":"Description in ar","author-ar":"Author in ar","theme":"cosmo","highlight":"github","title":"Automating build"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}