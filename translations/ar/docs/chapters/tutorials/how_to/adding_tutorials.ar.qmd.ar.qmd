###إضافة دروس

### دروس
الدروس هي طريقة رائعة لتعليم الناس كيفية استخدام مشروعك. وهي دليل تدريجي يمشي المستخدم من خلال مهمة أو مفهوم محدد. الدروس هي طريقة رائعة لجعل الناس يستكملون مشروعك، ولمساعدتهم على فهم كيفية استخدامه.

### كيفية كتابة الدروس
يتم كتابة الدروس في علامة كوارتو. كوارتو هي لغة الدرج المصممة لتكون سهلة الكتابة والقراءة، وسهلة التحويل إلى صيغ أخرى. كوارتو عبارة عن مجموعة متميزة من الـ markdown، لذا فإن أي ملف markdown هو ملف ربع ساري المفعول. يضيف كونارتو بعض الميزات إلى المميزات لأسفل لجعلها أسهل لكتابة الدروس. وتشمل بعض المعالم ما يلي:

- القدرة على تضمين الكود و الإخراج في نفس الملف
- القدرة على تضمين التعليمات البرمجية من الملفات الأخرى
- إضافة بيانات التعريف / الصور وغيرها من المحتوى إلى الملف


### مجلد لكتابة البرنامج التعليمي 
بشكل افتراضي، يتم كتابة الدروس في المجلد `/tutorials`. هذا هو المجلد حيث يتم تخزين جميع الدروس. يتم تخزين كل برنامج تعليمي في مجلد منفصل، واسم المجلد هو اسم البرنامج التعليمي. داخل المجلد، هناك ملفات ser<unk> `.qmd` التي تحتوي على محتويات البرنامج التعليمي. 


### تكوين البرنامج التعليمي
هناك أيضا ملف 'config.json' الذي يحتوي على تكوين البرنامج التعليمي. ملف son` يستخدم لهيكلة كيفية عرض البرنامج التعليمي من حيث ترتيب البرنامج التعليمي، العنوان والوصف وتجميع البرنامج التعليمي.

فيما يلي مثال لملف `config.json':

```json
{
    "المساهمة": {
        "title": "المساهمة في المشروع"،
        "الأطفال": {
            "Improving_documentation": {
                العنوان : "تحسين التوثيق"
            },
            "raising_issues": {
                العنوان: "إثارة المشاكل"
            },
            "raising_pr": {
                "عنوان": "رفع طلبات الجذب"
            }
        }
    },
    "project_structure": {
        "عنوان": "بنية المشروع"
    },
    "environment_setup": {
        "العنوان": "إعداد البيئة"
    },
    "سجل التغييرات": {
        "title": "سجل التغيير"
    },
    "التوطين": {
        "عنوان": "التعريب "
    },
    "How_to ": {
        "title": "كيف يمكن"،
        "الأطفال": {
            "setting_default_readme": {
                العنوان "title": "ضبط الرحلة الافتراضية"
            },
            "adding_tutorials": {
                "title": "إضافة دروس"
            },
            "specifying_source_files": {
                "title": "تحديد الملفات المصدرة"
            },
            "starting_a_new_build": {
                "title": "بدء بناء جديد"
            }
        }
    }
}

```

في المثال الوارد أعلاه، يحتوي ملف `config.json` على قائمة من الدروس التعليمية والترتيب الذي ينبغي عرضها فيه. يحتوي ملف `config.json` أيضًا على عنوان البرنامج التعليمي ووصف البرنامج التعليمي.

يحتوي ملف `config.json` أيضًا على قائمة للأطفال لكل برنامج تعليمي. يستخدم هذا لتجميع الدروس معا. فعلى سبيل المثال، في المثال الوارد أعلاه، فإن البرنامج التعليمي ”المساهم“ له ثلاثة أطفال: 'تحسين الوثائق`، و 'raising_issues`، و 'raising_pr`. هذا يجمع الدروس الثلاثة معاً تحت دروس "المساهمة".

### دروس التجميع
يمكن تجميع الدروس معا باستخدام ملف `config.json'. هذا مفيد لتنظيم الدروس في فئات. على سبيل المثال، قد ترغب في تجميع جميع الدروس المتعلقة بالمساهمة في المشروع معا، أو جميع الدروس المتعلقة بتهيئة البيئة معاً. هذا يجعل من الأسهل للمستخدمين العثور على الدروس التي يهتمون بها.

في المثال الوارد أعلاه، الملف `config.json` يجمع الدروس في فئات مثل `contributing` و`project_structure` و`environment_setup` و`changelog` و`localization` و`how_to`. ويحتوي كل من هذه الفئات على قائمة بالدروس، ويحتوي كل درس على قائمة بالأطفال. هذا يسمح لك بتنظيم الدروس بطريقة منطقية لمشروعك.

في هذا البرنامج التعليمي، تعلمنا كيفية كتابة الدروس في Quarto markdown، وكيفية تكوين `config. تعلمنا أيضا كيفية تجميع الدروس معا باستخدام ملف `config.json'. هذا يسمح لك بتنظيم الدروس بطريقة منطقية لمشروعك، ويجعل من الأسهل للمستخدمين العثور على الدروس التي يهتمون بها.

Summary
    - كيفية كتابة الدروس
    - تنسيق لكتابة الدروس
    - كيفية كتابة برنامج تعليمي
    - مجلد لكتابة البرنامج التعليمي


