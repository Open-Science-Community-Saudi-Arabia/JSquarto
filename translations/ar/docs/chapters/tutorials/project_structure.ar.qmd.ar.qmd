### بنية المشروع

---
title: بنية المشروع
---


#### بنية ملف المشروع
وفيما يلي هيكل الرابطة اليابانية للتعاون التقني:

“`باش
├── src
<unk> <unk> - وصية
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> - مسرحية
│   ├── utils
│   │   ├── codeconstruct.ts
│   │   ├── component.ts
│   │   ├── file.ts
│   │   ├── logger.ts
│   │   ├── parser.ts
│   │   ├── string.ts
<unk> <unk> <unk> <unk> <unk> <unk> <unk> - كتاب
<unk> <unk> - دروس
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> -- ٢٥ /
<unk> <unk> <unk> <unk> <unk> <unk> <unk> -how_to /
<unk> <unk> <unk> <unk> <unk> <unk> <unk> environment_setup.qmd
<unk> <unk> <unk> <unk> <unk> <unk> <unk> -localization.qmd
<unk> <unk> <unk> <unk> <unk> ', project_structure.qmd
<unk> <unk> <unk> <unk> <unk> )-config.json
│   │
<unk> <unk> <unk> <unk> <unk> <unk> - آخر
│   │
<unk> <unk> <unk> ', package.json
<unk> <unk> <unk> ', package-lock.json
<unk> <unk> <unk> <unk> <unk> <unk> .prettierrc

``` 


يحتوي دليل "API" على رمز المصدر لـ JSQuarto. وينظم دليل "API" على النحو التالي:

- 'src/interfaces' - يحتوي على جميع تعاريف النوع/العناوين للمشروع.
- 'src/utils' - يحتوي على جميع وظائف المنفعة للمشروع. وتستخدم هذه الوظائف المفيدة لأداء مهام مختلفة مثل الوقوف والكتابة وقطع الأخشاب.
- 'src/tutorials' - يحتوي على جميع الدروس للمشروع. هذه الدروس مكتوبة بتنسيق Quarto Markdown. لاحظ أن ملف `config.json` يستخدم لتحديد كيفية هيكلة الدروس.
- 'src/index.ts' - المدخل الرئيسي للمشروع.
- 'src/package.json' - ملف حزمة المشروع؛
- 'src/.prettierrc' - ملف التكوين المسبق للمشروع.
